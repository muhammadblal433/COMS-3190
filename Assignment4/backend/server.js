// backend/server.js
import express from 'express';
import cors from 'cors';
import bodyParser from 'body-parser';
import { MongoClient } from 'mongodb';

// â”€â”€ 1. basic app middleware â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
const app = express();
app.use(cors());
app.use(bodyParser.json());

// â”€â”€ 2. MongoDB connection (local default) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
const uri = process.env.MONGO_URI ?? 'mongodb://127.0.0.1:27017';
const client = new MongoClient(uri);
await client.connect();                         // â¬… blocks until DB is ready
app.locals.db = client.db('CycloneHR');         // make db handle visible to routers

// â”€â”€ 3. mount feature routers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
import leaveRequests from './routes/leaveRequests.js';
import jobApplications from './routes/jobApplications.js';

app.use('/api/leaveRequests',   leaveRequests);
app.use('/api/jobApplications', jobApplications);

// â”€â”€ 4. launch server â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
const PORT = 8080;
app.listen(PORT, () =>
  console.log(`ðŸš€ CycloneHR backend running on http://localhost:${PORT}`)
);
